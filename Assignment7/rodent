//Create an inheritance hierarchy of Rodent: Mouse, Gerbil, Hamster,etc. In the base class, provide methods that are common to all Rodents, and override these in the derived classes to perform different behaviors depending on the specific type of Rodent. Create an array of Rodent, fill it with different specific types of Rodents, and call your base-class methods to see what happens. Make the methods of Rodent abstract whenever possible and all classes should have default constructors that print a message about that class.





package assignments.Assignment7;
abstract class Rodent {
    abstract void eats();

}

class Mouse extends Rodent{
    public Mouse(){
        System.out.println("This is mouse");
    }
    @Override
    void eats() {
        System.out.println("Mouse eats meat and vegetarian foods");
    }
}
class Hamster extends Rodent{
    public Hamster(){
        System.out.println("This is a hamster");
    }
    @Override
    void eats() {
        System.out.println("Hamster eats only grass");
    }
}

class Gerbil extends Rodent{
    public Gerbil(){
        System.out.println("This is a gerbil");
    }
    @Override
    void eats() {
        System.out.println("Gerbil eats meat only");
    }

}

public class Rodents {
    public static void main(String[] args) {
        Rodent[] rodents = new Rodent[3];
        rodents[0] = new Mouse();

        rodents[0].eats();
        rodents[1] = new Gerbil();

        rodents[1].eats();
        rodents[2] = new Hamster();
        rodents[2].eats();
    }

}

